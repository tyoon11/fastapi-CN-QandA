version: '3'

services:
  mysql:
      image: mysql:8.0
      container_name: mysql
      environment:
        MYSQL_ROOT_PASSWORD: 123456
        MYSQL_DATABASE: myapp-sql
        MYSQL_USER: myapp-sql
        MYSQL_PASSWORD: 123456
        TZ: "Asia/Seoul" # 한국 시간대 설정
      volumes:
        # 기존의 db파일을 가져와 생성
        - ./db/backup.sql:/docker-entrypoint-initdb.d/init.sql
      ports:
        - "33306:3306"  # MySQL 접근 포트
      networks:
        - mynet

  myfastapi:
    build:
      context: ./myfastapi
      dockerfile: Dockerfile
    container_name: myfastapi
    ports:
      - "8001:8000"
    environment:
      - SQLALCHEMY_DATABASE_URL=mysql+pymysql://myapp-sql:123456@mysql/myapp-sql # DB URL
      - TZ=Asia/Seoul # 한국 시간 설정
    volumes:
      - ./myfastapi:/src  # 로컬 소스 코드 바인딩
    depends_on:
      - mysql
    networks:
      - mynet
      
  myfront:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: myfront
    ports:
      - "8002:5173"  # 프론트엔드 접근 포트
    volumes:
      - ./frontend:/src  # 로컬 소스 코드 바인딩
      - node_modules:/src/node_modules # 컨테이너 내부 node_modules를 별도 볼륨으로 관리
    networks:
      - mynet
    depends_on:
      - myfastapi

  nginx-proxy-manager:
    image: jlesage/nginx-proxy-manager
    container_name: myproxy
    ports:
      - "8181:8181"  # Nginx Proxy Manager 웹 UI 포트
      - "80:8080"    # HTTP 트래픽을 위한 포트
      - "443:4443"   # HTTPS 트래픽을 위한 포트
    volumes:
      - /docker/appdata/nginx-proxy-manager:/config  # 기본 설정 데이터
      - ./nginx/custom:/config/nginx/custom        # 커스텀 설정 디렉토리 - 리버스 프록시 설정
    networks:  
      - mynet
    depends_on:
      - myfastapi
      - myfront

networks:
  mynet:
    driver: bridge

volumes:
  node_modules:
